#finds all bolts that have some cost associated with them and 

PREFIX rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX rdfs:    <http://www.w3.org/2000/01/rdf-schema#>
PREFIX im:      <http://www.kwarc.info/sally/im#>
PREFIX asm:      <http://www.kwarc.info/sally/asm#>
PREFIX csm:      <http://www.kwarc.info/sally/csm#>
PREFIX acm:      <http://www.kwarc.info/sally/acm#>

SELECT ?objthread ?fbi ?file ?costval ?headval ?threadval ?colorval ?vendorval WHERE {

  # looks for the CAD object with some input label 
  # it has the ontologyURI cadobjim
   ?cadobj rdf:type acm:CADObject.
   ?cadobj im:ontologyURI ?cadobjim.
   ?cadobj rdfs:label "%s".
   
  #  tries to get the arg1 parameter   
	OPTIONAL {
                ?cadobj acm:valueOf ?cadargs.
   		?cadargs acm:hasKey "arg1".
   		?cadargs acm:hasValue ?objthread.
	}

   ?fbi asm:partOfFunctionalBlock ?fb.
   ?fb asm:partOfFile ?file.

  # looks for functionblock FB - functional block
  # FBI - functional block instance
   ?fbi a asm:FunctionalInstance.
   ?fbi asm:valueOf ?obj.
   ?obj im:ontologyURI ?cadobjim.

  # making sure that functional block instance talks about a cost
  # outputs it into costval
   ?fbi asm:valueOf ?cost.
   ?cost im:ontologyURI <https://tnt.kwarc.info/repos/stc/fcad/flange/cds/cost.omdoc?cost?cost>.
   ?cost rdfs:label ?costval.
   
OPTIONAL {
   ?fbi asm:valueOf ?thread.
   ?thread im:ontologyURI <https://tnt.kwarc.info/repos/stc/fcad/flange/cds/ISOmetricthread.omdoc?ISOmetricthread?sISOhexthread>.
   ?thread rdfs:label ?threadval.
   }

   ?fbi asm:valueOf ?color.
   ?color im:ontologyURI <https://tnt.kwarc.info/repos/stc/fcad/flange/cds/colors.omdoc?color?color>.
   ?color rdfs:label ?colorval.

   ?fbi asm:valueOf ?vendor.
   ?vendor im:ontologyURI <https://tnt.kwarc.info/repos/stc/fcad/flange/cds/vendor.omdoc?vendor?vendor>.
   ?vendor rdfs:label ?vendorval.

 	?fbi asm:valueOf ?head.
 	?head im:ontologyURI <https://tnt.kwarc.info/repos/stc/fcad/flange/cds/ISOhexbolt.omdoc?ISOhexbolt?head>.
 	?head rdfs:label ?headval.
 
}